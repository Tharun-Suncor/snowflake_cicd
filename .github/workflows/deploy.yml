name: Deploy to Snowflake

on:
  workflow_call:
    inputs:
      environment:
        type: string
        description: "Environment"
        required: true

jobs:
  deploy:
    name: Deploy to Snowflake
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8.x

      - name: Install dependencies
        run: |
          pip install schemachange

      - name: Deploy to ${{ inputs.environment }}
        env:
          SNOWFLAKE_ACCOUNT: ${{ inputs.environment == 'dev' && secrets.SNOWFLAKE_ACCOUNT_DEV || inputs.environment == 'qut' && secrets.SNOWFLAKE_ACCOUNT_QUT || secrets.SNOWFLAKE_ACCOUNT_PRD }}
          SNOWFLAKE_USERNAME: ${{ inputs.environment == 'dev' && secrets.SNOWFLAKE_USERNAME_DEV || inputs.environment == 'qut' && secrets.SNOWFLAKE_USERNAME_QUT || secrets.SNOWFLAKE_USERNAME_PRD }}
          SNOWFLAKE_ROLE: ${{ inputs.environment == 'dev' && secrets.SNOWFLAKE_ROLE_DEV || inputs.environment == 'qut' && secrets.SNOWFLAKE_ROLE_QUT || secrets.SNOWFLAKE_ROLE_PRD }}
          SNOWFLAKE_WAREHOUSE: ${{ inputs.environment == 'dev' && secrets.SNOWFLAKE_WAREHOUSE_DEV || inputs.environment == 'qut' && secrets.SNOWFLAKE_WAREHOUSE_QUT || secrets.SNOWFLAKE_WAREHOUSE_PRD }}
          SNOWFLAKE_DATABASE: ${{ inputs.environment == 'dev' && secrets.SNOWFLAKE_DATABASE_DEV || inputs.environment == 'qut' && secrets.SNOWFLAKE_DATABASE_QUT || secrets.SNOWFLAKE_DATABASE_PRD }}
          SNOWFLAKE_PASSWORD: ${{ inputs.environment == 'dev' && secrets.SNOWFLAKE_PASSWORD_DEV || inputs.environment == 'qut' && secrets.SNOWFLAKE_PASSWORD_QUT || secrets.SNOWFLAKE_PASSWORD_PRD }}
        run: |
          schemachange -f $GITHUB_WORKSPACE -a $SNOWFLAKE_ACCOUNT -u $SNOWFLAKE_USERNAME -r $SNOWFLAKE_ROLE -w $SNOWFLAKE_WAREHOUSE -d $SNOWFLAKE_DATABASE -c $SNOWFLAKE_DATABASE.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table

      - name: Notify success
        if: success()
        run: echo "${{ inputs.environment }} deployment succeeded!"

      - name: Notify failure
        if: failure()
        run: echo "${{ inputs.environment }} deployment failed!"
